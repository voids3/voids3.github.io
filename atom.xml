<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>惊鸿</title>
  
  
  <link href="/voids3.github.io/atom.xml" rel="self"/>
  
  <link href="http://voids3.github.io/voids3.github.io/"/>
  <updated>2019-09-28T13:15:03.972Z</updated>
  <id>http://voids3.github.io/voids3.github.io/</id>
  
  <author>
    <name>voids</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Gathering Children</title>
    <link href="http://voids3.github.io/voids3.github.io/2019/09/28/Gathering-Children/"/>
    <id>http://voids3.github.io/voids3.github.io/2019/09/28/Gathering-Children/</id>
    <published>2019-09-28T12:43:38.000Z</published>
    <updated>2019-09-28T13:15:03.972Z</updated>
    
    <content type="html"><![CDATA[<p>解题思路：最后数只会留在相邻的RL两个位置，对于每个L,用id数组记录左边离它最近的R位置，对于每个R，记录右边离它最近的L的位置;类似于以下情况：</p><p>i:      1 2 3 4 5 6 7 8 9  10  11   12<br> —-     R R L L L L R L R  R   L    L<br>id[i]:  3 3 2 2 2 2 8 7 11 11  10   10 </p><a id="more"></a><pre><code>然后遍历整个字符串，t=abs(i-id[i]);L:t为奇数，最后到L位置，否则到R位置R:t为奇数，最后到R位置，否则到L位置</code></pre><p>Code:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> ch[<span class="number">100005</span>];</span><br><span class="line"><span class="keyword">int</span> idx,id[<span class="number">100005</span>],ans[<span class="number">100005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> n=<span class="built_in">strlen</span>(ch+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(ch[i]==<span class="string">'L'</span>) id[i]=idx;</span><br><span class="line"><span class="keyword">else</span> idx=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line"><span class="keyword">if</span>(ch[i]==<span class="string">'R'</span>) id[i]=idx;</span><br><span class="line"><span class="keyword">else</span> idx=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(ch[i]==<span class="string">'L'</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>((i-id[i])%<span class="number">2</span>==<span class="number">1</span>) ans[id[i]+<span class="number">1</span>]++;</span><br><span class="line"><span class="keyword">else</span> ans[id[i]]++; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span>((id[i]-i)%<span class="number">2</span>==<span class="number">1</span>) ans[id[i]<span class="number">-1</span>]++;</span><br><span class="line"><span class="keyword">else</span> ans[id[i]]++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans[i]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;解题思路：最后数只会留在相邻的RL两个位置，对于每个L,用id数组记录左边离它最近的R位置，对于每个R，记录右边离它最近的L的位置;类似于以下情况：&lt;/p&gt;&lt;p&gt;i:      1 2 3 4 5 6 7 8 9  10  11   12&lt;br&gt; —-     R R L L L L R L R  R   L    L&lt;br&gt;id[i]:  3 3 2 2 2 2 8 7 11 11  10   10 &lt;/p&gt;
    
    </summary>
    
    
      <category term="C++" scheme="http://voids3.github.io/voids3.github.io/categories/C/"/>
    
    
      <category term="模拟" scheme="http://voids3.github.io/voids3.github.io/tags/%E6%A8%A1%E6%8B%9F/"/>
    
  </entry>
  
</feed>
